stages:
  - test
  - lint
  - publish
  - pre-release-cleanup
  - test-release
  - release
  - post-release-cleanup
  - cleanup 
  - notify

test:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(main|develop)$/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - chmod +x ./ci/test.sh
    - ./ci/test.sh
  tags:
    - imagesbuilder

lint:
  stage: lint
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(main|develop)$/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - chmod +x ./ci/lint.sh
    - ./ci/lint.sh
  tags:
    - imagesbuilder

mirror:
  stage: publish
  script:
    - setsid ./ci/mirror.sh
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(main.*)$/
  tags:
    - mirror

pre-release-cleanup:
  stage: pre-release-cleanup
  image: alpine:latest
  variables:
    GIT_STRATEGY: none
  script:
    - chmod +x ./ci/pre-release-cleanup.sh
    - ./ci/pre-release-cleanup.sh
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH =~ /^(main.*)$/
  tags:
    - imagesbuilder

#? test-release is just for testing
#? It does not release artifacts but simulates the process
test-release:
  stage: test-release
  image: docker:stable
  services:
    - docker:dind
  variables:
    GIT_DEPTH: 0
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
  script:
    - chmod +x ./ci/test-release.sh
    - ./ci/test-release.sh
  tags:
    - imagesbuilder

release:
  stage: release
  image: docker:stable
  services:
    - docker:dind
  variables:
    GIT_DEPTH: 0
  only:
    refs:
      - tags
  script:
    - chmod +x ./ci/release.sh
    - ./ci/release.sh
  tags:
    - imagesbuilder

post-release-cleanup:
  stage: post-release-cleanup
  image: alpine:latest
  variables:
    GIT_STRATEGY: none
  script:
    - chmod +x ./ci/post-release-cleanup.sh
    - ./ci/post-release-cleanup.sh
  only:
    refs:
      - tags
  tags:
    - imagesbuilder

cleanup:
  stage: cleanup
  only:
    refs:
      - tags
  script:
    - chmod +x ./ci/cleanup.sh
    - ./ci/cleanup.sh
  tags:
    - imagesbuilder

notify:
  stage: notify
  only:
    refs:
      - tags
  script:
    - chmod +x ./ci/notify.sh
    - ./ci/notify.sh
  tags:
    - imagesbuilder
